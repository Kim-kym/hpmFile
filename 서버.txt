서버 개요 
 - 서버는 총 2대의 EC2 인스턴스로 구성
 - 각 인스턴스는 역할을 나눠서 운영되고 있음 

1번 서버
 - 프론트 엔드(React)와 백엔드(Spring Boot)를 도커로 띄운 서버 
 
2번 서버 
 - 데이터베이스 전용 서버(Ubuntu Server) 
 - 로컬 환경에 있는 sql문을 서버로 복사       

서버 역할을 분리한 이유 
 - 한 서버에서 프론트 + 백엔드 + DB까지 다 돌리면 
 - 서버 메모리가 부족해서 터미널이 멈추는 현상 발생
 > 이를 해결하기 위해 역할에 따라 서버를 분리 
 > 결과적으로 서버가 안정적으로 운영됨  

[추가 설명] 

*도커 
 - 컨테이너를 만들고, 실행하고, 관리해주는 툴

* "도커로 띄운다" 란? 
 1. 코드(스프링, 리액트)를 이미지(압축 파일)로 만든다 
 2. 이미지를 실행(압축 파일 풀기)하면 컨테이너가 만들어지고, 그 안에서 앱이 실제로 실행됨 
 * 컨테이너에는 앱 실행에 필요한 코드+환경+설정이 전부 들어가 있는 독립적인 공간
 * 서버 배포 = 서버에 컨테이너를 띄우면 서버 도메인 주소로 접속 가능             

* 도커 사용 목적 
 - 배포 간편(이미지를 만들고 서버에 올려서 실행하면 끝)  
 - 실행 환경 통일 => 어떤 환경에서든 실행 가능 

 